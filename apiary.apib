FORMAT: 1A
HOST: flame-dev.1n1.hk

# Fenix

A web API for Fenix project.

        
# Data Structures

## Status (object)

+ status:ok (string,required) - the resutl status(ok or err)

## Err (object)

+ status:fail (string,required)
+ error_code:102 (number,required) - aa
+ description:something goes wrong (string,required) -aa

## Register Info (object)

+ product_code:123 (string,required)
+ phone_id:123 (string,required)
+ bbt_id:123 (string,required)


# Group Product Code

## Product Status [/v1/product/{product_code}]

檢查啟動碼是否啟用過。

+ Parameters
    + product_code:12aaa (string,required) 

### Get Product Code Status [GET]

+ Response 200 (application/json)

    + Attributes (Status)
    + Attributes 
        + type:full (string,required) `full`,`limited`,`upgrade`
        + is_activated:true
        + activated_at:`2006-01-02T15:04:05Z`

# Group Member

## Register [/v1/members]

註冊會員資料。

### Register [POST]


+ Request Success Register (application/json)
    
    + Attributes (Register Info)
    + Attributes
        + type:basic (string,required) - register type(basic,facebook,wechat)
        + email:aaa@aaa (string,required) - user's email, must unique.
        + password:dawkkopa (string,required) - hashed password came along with email.        
        + product_code (string,required) - the QRcode attached on product
    

+ Response 200 (application/json)

    + Attributes (Status)
    + Attributes 
        + member_id:123 (string,required) 
        + secret:123 (string,required)
        + registered_at:`2015-01-02T15:04:05Z` (string,required)


+ Request Fail Register (application/json)

    + Attributes
        + email:aaa@aaa (string,required) - user's email, must unique.
        + password:dawkkopa (string,required) - hashed password came along with email.        
        + product_code:123 (string,required) - the QRcode attached on product
    
+ Response 200 (application/json)

    + Attributes (Err)

## Member Profile [/v1/members/{member_id}]

+ Parameter
    + member_id:123 (string)


### Get Profile [GET]

+ Request (application/json)

    + Headers
    
            Authorization: 123:digest
        
+ Response 200 (application/json)

    + Attributes (Register Info)
    + Attributes
        + status:ok (string,required)
        + first_name:`en-ping` (string)
        + last_name:hsieh (string)
        + birthday:`1988-12-15` (string)
        + `is_allow_migrate`:true (boolean,required)
        + registered_at:`2015-01-02T15:04:05Z` (string,required)
        + synced_at:`2015-01-02T15:04:05Z` (string,required)
        + modified_at:`2015-01-02T15:04:05Z` (string,required)
        
        
### Modified Profile [PUT]

+ Request (application/json)

    + Headers
    
            Authorization: 123:digest
            
    + Attributes
        + first_name:`en-ping` (string)
        + last_name:hsieh (string)
        + birthday:`1988-12-15` (string)

+ Response 200 (application/json)
    
    + Attributes
        + status:ok (string,required)
        + modified_at:`2015-01-02T15:04:05Z` (string,required)





## Sync Records [/v1/member/{member_id}/records]

同步溫度記錄。

+ Parameter
    + member_id:123 (string)
    

+ Attributes 
    + measured_date:`2015-04-22` (string,required) - 紀錄發生的時間。
    + created_at:`2015-04-22T15:04:00Z` (string,required) - 建立記錄的時間。 
    + modified_at:`2015-04-22T15:04:00Z` (string,optional) - 最後修改記錄的時間，預設為建立記錄的時間。 
    + degrees (number,optional) - 單位0.01度C
    + measured_at:`2015-04-22T15:04:00Z` (string,optional) - 當手動輸入時以使用者輸入為主，若是BBT傳來則以BBT傳來為主。
    + `is_from_bbt`:true (boolean,optional)
    + is_medicine:true (boolean,optional)
    + is_alcohol:true (boolean,optional)
    + is_fever:true (boolean,optional)
    + is_sex:true (boolean,optional)
    + note (string,optional)

### Push Records [POST]


+ Request Insert or Edit(application/json)

    + Headers
    
            Authorization: 123:digest

    + Body 

            {
                "2015-01-02":{
                    "measured_date":"2015-01-02",
                    "created_at":"2006-01-02T15:04:05Z",
                    "modified_at":"2006-01-02T15:04:05Z",
                    "degrees":3700,         
                    "measured_at":"2006-01-02T15:04:05Z",
                    "is_from_bbt":true,
                    "is_medicine":true,
                    "is_alcohol":true,
                    "is_fever":true,
                    "is_sex":true,
                    "note":"say something..."
                },
                "2015-01-03":{
                    "measured_date":"2015-01-03",
                    "created_at":"2006-01-03T15:04:05Z",
                    "modified_at":"2006-01-03T15:04:05Z",
                    "degrees":3680,         
                    "measured_at":"2006-01-03T15:04:05Z",
                    "is_from_bbt":true,
                    "is_medicine":false,
                    "is_alcohol":false,
                    "is_fever":true,
                    "is_sex":true
                }
            }

+ Request Delete (application/json)

    + Headers
    
            Authorization: 123:digest

    + Body 

            {
                "2015-01-02T15:04:05Z":null
            }


+ Response 200 (application/json)

        + Attributes (Status)
        + Attributes
            synced_at:`2009-07-22T12:55:44Z`


### Get Records [GET]

+ Request 2 Month Records(application/json)

    + Headers
    
            Authorization: 123:digest

+ Response 200 (application/json)
 

     
            {
                "status":"ok",
                "records":{
                    "2015-01-02":{
                        "measured_date":"2015-01-02",
                        "created_at":"2006-01-02T15:04:05Z",
                        "modified_at":"2006-01-02T15:04:05Z",
                        "degrees":3700,         
                        "measured_at":"2006-01-02T15:04:05Z",
                        "is_from_bbt":true,
                        "is_medicine":true,
                        "is_alcohol":true,
                        "is_fever":true,
                        "is_sex":true,
                        "note":"say something..."
                    },
                    "2015-01-03":{
                        "measured_date":"2015-01-03",
                        "created_at":"2006-01-03T15:04:05Z",
                        "modified_at":"2006-01-03T15:04:05Z",
                        "degrees":3680,         
                        "measured_at":"2006-01-03T15:04:05Z",
                        "is_from_bbt":true,
                        "is_medicine":false,
                        "is_alcohol":false,
                        "is_fever":true,
                        "is_sex":true
                    }
                }
            }
            
## Sync Periods [/v1/member/{member_id}/periods]

同步溫度記錄。

+ Parameter
    + member_id:123 (string)

+ Attributes 
    + id (string,required) - 唯一的識別。
    + date_at:`2015-04-22` (string,required) - 週期開始的時間。
    + `is_human_input`:true (boolean,required) 
    + `is_init`:false (boolean,required)
    + `is_type_started`:true (boolean,required)

### Push Periods [POST]

+ Request Insert or Edit(application/json)

    + Headers
    
            Authorization: 123:digest

    + Body 

            {
                "1":{
                    "id":"1",
                    "date_at":"2015-01-02",
                    "is_human_input":true,
                    "is_init":false,
                    "is_type_started":true
                },
                "2":{
                    "id":"2",
                    "date_at":"2015-02-03",
                    "is_human_input":true,
                    "is_init":false,
                    "is_type_started":false
                }

            }

+ Request Delete (application/json)

    + Headers
    
            Authorization: 123:digest

    + Body 

            {
                "3":null
            }


+ Response 200 (application/json)

    + Attributes (Status)
    + Attributes 
        synced_at:`2009-07-22T12:55:44Z`



### Pull Periods [GET]

+ Request Periods(application/json)

    + Headers
    
            Authorization: 123:digest

+ Response 200 (application/json)

        {
            "status":"ok",
            "periods":{
                "1":{
                    "id":"1",
                    "date_at":"2015-01-02",
                    "is_human_input":true,
                    "is_init":false,
                    "is_type_started":true
                },
                "2":{
                    "id":"2",
                    "date_at":"2015-02-03",
                    "is_human_input":true,
                    "is_init":false,
                    "is_type_started":false
                }
            }
        }
        
## Sync Setting [/v1/member/{member_id}/setting]

同步BBT設定。

+ Parameter
    + member_id:123 (string)
    
+ Attributes
    + alarm_sound_vol:0 (number,required) - 0 as OFF, 1 as min, 2 as med, 3 as max 
    + alarm_at:"15:04:00" (string,required) - UTC time
    + is_backlight:true (boolean,required) 
    + sync_sound_vol:3 (number,required) - 0 as OFF, 1 as min, 2 as med, 3 as max
    + modified_at:`2006-01-02T15:04:05Z` (string,required)

### Push Settings [PUT]

+ Request (application/json)
    
    + Headers
    
            Authorization: 123:digest


+ Response 200 (application/json)

    + Body 

            {
                "alarm_sound_vol": 1,
                "sync_sound_vol": 1,
                "alarm_at":"12:55:00", 
                "is_backlight":true,
                "modified_at":"2009-07-22T12:55:44Z"  
            }

### Pull Settings [GET]

+ Request (application/json)

    + Headers
    
            Authorization: 123:digest


+ Response 200 (application/json)


            {
                "status":"ok",
                "alarm_sound_vol": 1,
                "sync_sound_vol": 1,
                "alarm_at":"12:55:00", 
                "is_backlight":true,
                "modified_at":"2009-07-22T12:55:44Z"  
            }

        
# Group Appendix

## Common Attributes 

+ `bbt_id`溫度計ID

    toUpper(sha1(toUpper(XX:XX:XX:XX:XX:XX_1N1_BBT)))

    PlainText:
    
        XX:XX:XX:XX:XX:XX_1N1_BBT
    Hash:
    
        56CDB9A741552F7EECB3FC215814A8B617B99E5D

+ `phone_id` 手機ID

    toUpper(sha1(toUpper(XX:XX:XX:XX:XX:XX_1N1_PHONE)))
    
    PlainText:
    
        XX:XX:XX:XX:XX:XX_1N1_PHONE
    Hash:
    
        3879F289A08E2B62E4AF452183C600F0B91A1CAC

+ `product_code` 產品代碼

    隨產品附的`product_code`，algorithm=`toUpper(sha1(haoyunlai_SN))`
    
    PlainText:
    
        haoyunlai_1
    Hash:
    
        AFC4E7CCABD9583DCA2F563DB1A9419A39E817D0

+ `confirm_code` 認證代碼

    toUpper(sha1(`phone_id`_TIMESTAMP))，TIMESTAMP是UTC時間(LONG)
    
    PlainText:
    
        3879F289A08E2B62E4AF452183C600F0B91A1CAC_1429698217
    Hash:
    
        4D5A551FEE05398F6B7B2FAAE3427DD8CF584E2C
